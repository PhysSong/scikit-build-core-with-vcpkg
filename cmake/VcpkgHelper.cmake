function(use_static_with_dynamic_runtime_vcpkg)
	if (DEFINED CMAKE_VS_PLATFORM_NAME AND WIN32)
		if (CMAKE_VS_PLATFORM_NAME STREQUAL "Win32")
			set(VCPKG_TARGET_TRIPLET "x86-windows-static-md")
		elseif(CMAKE_VS_PLATFORM_NAME STREQUAL "x64")
			set(VCPKG_TARGET_TRIPLET "x64-windows-static-md")
		elseif(CMAKE_VS_PLATFORM_NAME STREQUAL "ARM")
			set(VCPKG_TARGET_TRIPLET "arm-windows-static-md")
		elseif(CMAKE_VS_PLATFORM_NAME STREQUAL "ARM64")
			set(VCPKG_TARGET_TRIPLET "arm64-windows-static-md")
		endif()
		endif()

		find_program(CL cl QUIET)
		if (CL)
		if(CL MATCHES "amd64/cl.exe$" OR CL MATCHES "x64/cl.exe$")
			set(VCPKG_TARGET_TRIPLET "x64-windows-static-md")
		elseif(CL MATCHES "arm/cl.exe$")
			set(VCPKG_TARGET_TRIPLET "arm-windows-static-md")
		elseif(CL MATCHES "arm64/cl.exe$")
			set(VCPKG_TARGET_TRIPLET "arm64-windows-static-md")
		elseif(CL MATCHES "bin/cl.exe$" OR CL MATCHES "x86/cl.exe$")
			set(VCPKG_TARGET_TRIPLET "x86-windows-static-md")
		endif()
	endif()
endfunction()

function(ensure_vcpkg)
	if(NOT DEFINED CMAKE_TOOLCHAIN_FILE)
		if(DEFINED ENV{VCPKG_ROOT})
			set(CMAKE_TOOLCHAIN_FILE "${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake" CACHE STRING "Vcpkg toolchain file" FORCE)
		else()
			include(FetchContent)
			FetchContent_Declare(
				vcpkg
				GIT_REPOSITORY https://github.com/microsoft/vcpkg
				GIT_TAG 2024.08.23
			)
			FetchContent_MakeAvailable(vcpkg)
			set(CMAKE_TOOLCHAIN_FILE "${vcpkg_SOURCE_DIR}/scripts/buildsystems/vcpkg.cmake" CACHE STRING "Vcpkg toolchain file" FORCE)
		endif()
	endif()
endfunction(ensure_vcpkg)
